openapi: 3.0.0
info:
  title: Butler API
  description: Butler API
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: 本番環境

paths:
  /api/signup:
    post:
      summary: サインアップ
      description: ユーザーサインアップ
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ユーザーネーム
                email:
                  type: string
                  format: email
                  description: メールアドレス
                password:
                  type: string
                  description: パスワード
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: ユーザー登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: ユーザーネーム
                  message:
                    type: string
                    description: メッセージ
                required:
                  - message
    
  /api/signin:
    post:
      summary: サインイン
      description: ユーザーサインイン
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: メールアドレス
                password:
                  type: string
                  description: パスワード
              required:
                - email
                - password
      responses:
        '200':
          description: ユーザー認証成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: ユーザーネーム
                  message:
                    type: string
                    description: メッセージ
                  token:
                    type: string
                    description: JWTトークン
                required:
                  - message

  /api/chats:
    get:
      summary: ユーザーのチャットルーム一覧
      description: ユーザーのチャットルームを全て取得
      responses:
        '200':
          description: チャットルーム取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  chats:
                    type: array
                    description: チャットルーム一覧
                    items:
                      type: object
                      properties:
                        chat_id:
                          type: string
                          description: チャットルームID
    post:
      summary: チャット新規作成
      description: チャット新規作成
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: private or group
                chatName:
                  type: string
                  description: チャットルーム名
                participants:
                  type: array
                  description: チャット参加者
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: ユーザーID
              required:
                - type
                - participants
      responses:
        '201':
          description: チャットルーム作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatId:
                    type: string
                    description: チャットルームID
                  type:
                    type: string
                    description: private or group
                  chatName:
                    type: string
                    description: チャットルーム名
                  participants:
                    type: array
                    items:
                      type: object
                      properties:
                        uid:
                          type: string
                          description: ユーザーID
                    description: チャット参加者
                  createdAt:
                    type: string
                    format: date-time
                    description: チャットルーム作成日時
                  updatedAt:
                    type: string
                    format: date-time
                    description: チャットルーム更新日時

  /api/messages:
    get:
      summary: チャットルームのメッセージ取得
      description: 指定されたチャットルームのメッセージを取得
      parameters:
        - name: chatId
          in: query
          required: true
          schema:
            type: string
          description: 取得するチャットルームのID
      responses:
        '200':
          description: メッセージ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    description: メッセージ一覧
                    items:
                      type: object
                      properties:
                        messageId:
                          type: string
                          description: メッセージID
                        chatId:
                          type: string
                          description: チャットルームID
                        senderId:
                          type: string
                          description: 送信者のユーザーID
                        content:
                          type: string
                          description: メッセージ内容
                        timestamp:
                          type: string
                          format: date-time
                          description: メッセージ送信日時
    post:
      summary: メッセージ送信
      description: 指定されたチャットルームにメッセージを送信
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                  description: 送信先のチャットルームID
                senderId:
                  type: string
                  description: 送信者のユーザーID
                content:
                  type: string
                  description: メッセージ内容
              required:
                - chatId
                - senderId
                - content
      responses:
        '201':
          description: メッセージ送信成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string
                    description: メッセージID
                  chatId:
                    type: string
                    description: チャットルームID
                  senderId:
                    type: string
                    description: 送信者のユーザーID
                  content:
                    type: string
                    description: メッセージ内容
                  timestamp:
                    type: string
                    format: date-time
                    description: メッセージ送信日時
    delete:
      summary: メッセージ取り消し
      description: 指定されたメッセージを削除
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messageId:
                  type: string
                  description: 取り消すメッセージのID
              required:
                - messageId
      responses:
        '200':
          description: メッセージ取り消し成功
    put:
      summary: メッセージ編集
      description: 指定されたメッセージの内容を編集
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messageId:
                  type: string
                  description: 編集するメッセージのID
                newContent:
                  type: string
                  description: 更新後のメッセージ内容
              required:
                - messageId
                - newContent
      responses:
        '200':
          description: メッセージ編集成功
  /api/summary:
    post:
      summary: 選択したチャットメッセージの要約を作成
      description: 指定されたメッセージ内容をAIに要約させます
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: 要約作成をリクエストしたユーザーID
                content:
                  type: string
                  description: 選択されたチャット上のメッセージ
      responses:
        '200':
          description: 要約作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  summaryId:
                    type: string
                    format: uuid
                    description: 要約のデータのID
        '400':
          description: 無効なリクエスト（パラメータ不足・形式不正など）
        '500':
          description: サーバーエラー

    get:
      summary: ユーザーの要約データを取得
      description: 指定されたユーザーIDに紐づく要約データID一覧を取得します
      parameters:
        - name: uid
          in: query
          required: true
          schema:
            type: string
          description: 要約を保有するユーザーID
      responses:
        '200':
          description: 要約データ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  summaries:
                    type: array
                    description: 要約データIDの配列
                    items:
                      type: string
                      format: uuid
        '400':
          description: 無効なリクエスト（パラメータ不足・形式不正など）
        '404':
          description: 指定したユーザーの要約データが見つからない
        '500':
          description: サーバーエラー

    delete:
      summary: 要約データの削除
      description: 指定した要約データを削除します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summaryId:
                  type: string
                  format: uuid
                  description: 削除する要約データのID
      responses:
        '200':
          description: 要約データ削除成功
        '400':
          description: 無効なリクエスト（パラメータ不足・形式不正など）
        '404':
          description: 指定した要約データが見つからない
        '500':
          description: サーバーエラー
  /api/summary/{summaryId}:
    get:
      summary: 特定の要約データの詳細を取得
      description: 指定された要約データIDに紐づく要約結果を取得します
      parameters:
        - name: summaryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: 取得する要約データのID
      responses:
        '200':
          description: 要約データ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  summaryId:
                    type: string
                    format: uuid
                    description: 要約データのID
                  summary:
                    type: string
                    description: AIによる要約結果
                  created_at:
                    type: string
                    format: date-time
                    description: 要約データの作成日時
        '400':
          description: 無効なリクエスト（パラメータ不足・形式不正など）
        '404':
          description: 指定した要約データが見つからない
        '500':
          description: サーバーエラー
